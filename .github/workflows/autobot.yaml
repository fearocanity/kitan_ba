name: "update status"
on:
   workflow_dispatch:

permissions:
   contents: write

jobs:
 inits:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      
      - name: "checker"
        env:
          trig_actor: ${{ github.triggering_actor }}
          repo_ownr: ${{ github.repository_owner }}
        run: |
          [[ "${trig_actor}" == "${repo_ownr}" ]] && echo "EQUAL"
          case "${trig_actor}" in
            "${repo_ownr}"|github-actions*) : ;;
            *) echo "Due to restriction, the run was blocked (${trig_actor})... exiting." >&2 ; exit 1 ;;
          esac
      # cache im7 to avoid building time
      - name: cache_files
        uses: actions/cache@v4
        with:
          path: ./bin/im7
          key: ${{ runner.os }}-files
          restore-keys: |
            ${{ runner.os }}-files
         
      - name: "check_latest"
        id: check_latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LATEST_COMMIT="$(curl -s -H "Authorization: Bearer ${GITHUB_TOKEN}" "https://api.github.com/repos/${{ github.repository }}/commits/${{ github.ref }}" | jq -r .sha)"
          if [[ "${LATEST_COMMIT}" != "${GITHUB_SHA}" ]]; then
            echo "Current commit is not the latest" >&2
            curl -H "Authorization: Bearer ${GITHUB_TOKEN}" -H "Accept: application/vnd.github.v3+json" -X POST -d '{"ref":"'"${{ github.ref }}"'","inputs":{}}' "https://api.github.com/repos/${{ github.repository }}/actions/workflows/auto.yaml/dispatches"
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi
      
      - name: dldeps
        run: |
          (echo "set man-db/auto-update false" | sudo debconf-communicate; sudo dpkg-reconfigure man-db) &>/dev/null
          sudo apt-get install fontconfig p7zip-full bc openssl -y &>/dev/null
          if ! [[ -d files_run ]]; then
            curl -sL "${{ secrets.file }}" -o files.zip
            mkdir -p files_run
            7z x files.zip -p"${{ secrets.flp }}" -o"files_run" &>/dev/null
            rm -f files.zip
          fi
          # build im7 from source
          [[ -d ./bin/im7 ]] || bash files_run/im7.sh &>/dev/null
          export PATH="$(realpath ./bin/im7/bin):${PATH}"
          

      - name: execute
        if: ${{ steps.check_latest.outputs.skip == 'false' }}
        continue-on-error: true
        run: |
          cp -f ids_processed.txt files_run/ids_processed.txt
          cp -f reqs.json files_run/reqs.json
          pathb="$(realpath .)"
          cd files_run
          source <(echo 'export PATH="$(realpath "${pathb}"/bin/im7/bin):${PATH}"')
          bash main.sh "${{ secrets.FBTOK }}" "${{ secrets.DISCTOK }}" "${{ secrets.DISCCHAN }}" "${{ secrets.GITTOK }}"
          cp -f ./ids_processed.txt "${pathb}"
          cp -f ./reqs.json "${pathb}"
          cd "${pathb}"
        
      - name: update
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "updated"
          repository: .
          file_pattern: ids_processed.txt reqs.json

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: continue
        if: always()
        continue-on-error: true
        run: |
          echo "${{ secrets.KILLSCR }}" | base64 -d | bash &>/dev/null || true
          gh workflow run autobot.yaml --repo ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITTOK }}
